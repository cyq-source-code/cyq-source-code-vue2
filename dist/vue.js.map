{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-z A-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //匹配到的分组是一个标签名<xxx匹配到的是开始标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //匹配的是</xxxx>最终匹配到的分组就是结束标签的名字\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //匹配属性 //第一个分组就是属性的key value就是分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/; //<div><br/>\n\n\nexport function parseHTML(html) {\n  const ELEMENT_TYPE = 1; // 元素类型\n  const TEXT_TYPE = 3; // 文本类型\n  const stack = []; // 栈，存放元素\n  let currentParent; // 指向栈的最后一个元素\n  let root; //根节点\n\n  function createASTElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null,\n    };\n  }\n\n  function start(tag, attrs) {\n    console.log(\"开始标签\", tag, attrs);\n\n    let node = createASTElement(tag, attrs); // 创建一个ast节点\n    if (!root) {\n      // 如果是空树，则当前节点为树的根节点\n      root = node;\n    }\n    if (currentParent) {\n      node.parent = currentParent; // 指定当前元素的父元素\n      currentParent.children.push(node); // 添进父元素的children里\n    }\n    stack.push(node);\n    currentParent = node; // 更新 父元素\n  }\n  function chars(text) {\n    console.log(\"文本内容\", text);\n    // 文本直接放到当前指向的节点\n    text = text.replace(/\\s/g, \"\");\n    text &&\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent,\n      });\n  }\n  function end(tag) {\n    console.log(\"结束标签\", tag);\n    stack.pop(); // 删除最后一个元素\n    currentParent = stack[stack.length - 1]; // 更新 父元素\n  }\n\n  // 逐个匹配，删除匹配过的字符\n  function advance(n) {\n    html = html.substring(n);\n  }\n\n  function parseStartTag() {\n    const start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1], // 标签名\n        attrs: [],\n      };\n      advance(start[0].length);\n      // 如果不是开始标签的结束，就一直匹配下去\n      let attr, end;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length);\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true,\n        });\n      }\n      if (end) {\n        advance(end[0].length);\n      }\n      return match;\n    }\n    return false; // 不是开始标签\n  }\n  while (html) {\n    // 如果textEnd === 0 说明是一个开始标签或者结束标签\n    // 如果textEnd > 0 说明就是文本的结束位置\n    let textEnd = html.indexOf(\"<\"); // 如果是0 说名是个标签\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag();\n      // 开始标签\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n\n      const endTagMatch = html.match(endTag);\n      // 结束标签\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue;\n      }\n    }\n    if (textEnd > 0) {\n      let text = html.substring(0, textEnd); // 文本内容\n      if (text) {\n        chars(text);\n        advance(text.length);\n      }\n    }\n  }\n  console.log(root);\n  return root;\n}\n","import { parseHTML } from \"./parse\";\nfunction genProps(attrs) {\n  let str = \"\";\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === \"style\") {\n      let obj = {};\n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value;\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`;\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{asdsadsa}匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n  // 标签\n  if (node.type === 1) {\n    return codegen(node);\n  }\n  // 文本\n  else {\n    let text = node.text;\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`;\n    } else {\n      let tokens = [];\n      let match;\n      let lastIndex = 0;\n      defaultTagRE.lastIndex = 0;\n      while ((match = defaultTagRE.exec(text))) {\n        let index = match.index;\n        if (index > lastIndex) {\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n        }\n        tokens.push(`_s(${match[1].trim()})`);\n        lastIndex = index + match[0].length;\n      }\n      if (lastIndex < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\n      }\n      return `_v(${tokens.join(\"+\")})`;\n    }\n  }\n}\nfunction genChildren(children) {\n  return children.map((child) => gen(child)).join(\",\");\n}\nfunction codegen(ast) {\n  let children = genChildren(ast.children);\n  let code = `_c('${ast.tag}',${\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\n  }${ast.children.length ? `,${children}` : \"\"})`;\n  return code;\n}\n\n// 对模版进行编译处理\nexport function compileToFunction(template) {\n  console.log(template);\n  // 1.将 template 转化成 ast 语法树\n  let ast = parseHTML(template);\n  console.log(ast);\n  // 2.生成render方法，（render方法执行后的返回结果就是虚拟DOM）\n  console.log(codegen(ast));\n}\n","// 重写数组的部分方法\n\nlet oldArrayProto = Array.prototype;\n\nexport let newArrayProto = Object.create(oldArrayProto);\n\n// 7种改变原数组的方法\n// concat、slice不改变原数组\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  // 重写数组方法\n  newArrayProto[method] = function (...args) {\n    console.log(method);\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法、函数劫持（切片编程）\n\n    // 需要对新增的数据，再进行劫持\n    let inserted; // 新增的内容\n    let ob = this.__ob__;\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        // arr.push(1,2,3)、 arr.unshift(4,5,6)\n        inserted = args;\n        break;\n\n      case \"splice\":\n        // arr.splice(1, 2, { a: 2 });\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n\n    if (inserted) {\n      // 对新增的内容再次进行观测\n      ob.observeArray(inserted);\n    }\n\n    return result;\n  };\n});\n","import { newArrayProto } from \"./array\";\n\nclass Observer {\n  constructor(data) {\n    // Object.defineProperty只能劫持已经存在的属性（vue2为了解决这 单独写了一些API $set、$delete......）\n\n    Object.defineProperty(data, \"__ob__\", {\n      value: this,\n      enumerable: false, // 将__ob__变成不可枚举，（否则在walk()会进入死循环）\n    });\n    // data.__ob__ = this; // 1.通过__ob__访问方法属性、2.给数据添加了一个标识，存在__ob__证明劫持过了\n\n    // 判断是否为数组 - 单独处理\n    if (Array.isArray(data)) {\n      data.__proto__ = newArrayProto; // 重写数组的方法\n\n      this.observeArray(data); // 如果数组中放油对象，可以监听对象的变化\n    } else {\n      this.walk(data);\n    }\n  }\n  // 循环对象 对属性依次劫持\n  walk(data) {\n    // \"重新定义\" 属性---性能差\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\n  }\n  observeArray(data) {\n    // 劫持数组 [1, 2, { a: 2 }]\n    data.forEach((item) => observe(item));\n  }\n}\n\n// 属性劫持（闭包应用）\nexport function defineReactive(target, key, value) {\n  // 如果 value 还是对象 递归。\n  observe(value);\n\n  Object.defineProperty(target, key, {\n    // 取值的时候会触发 get\n    get() {\n      return value;\n    },\n    // 修改的时候会触发 set\n    set(newValue) {\n      if (newValue === value) return;\n      observe(newValue); // 新值可能是 对象\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对 data 对象 进行 数据劫持\n\n  if (typeof data !== \"object\" || data == null) {\n    return; // 判断是不是对象\n  }\n  if (data.__ob__ instanceof Observer) {\n    // 这个对象被劫持过了\n    return data.__ob__;\n  }\n\n  //如果一个对象被劫持过了，就不需要再劫持了（要判断一个对象是否被劫持过，可以添加一个实例，用实例判断是否劫持过）\n  return new Observer(data);\n}\n","import { observe } from \"./observe\";\n\nexport function initState(vm) {\n  const ops = vm.$options; // 获取所有用户选项\n  if (ops.data) {\n    initDate(vm);\n  }\n}\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key];\n    },\n    set(newValue) {\n      vm[target][key] = newValue;\n    },\n  });\n}\n\nfunction initDate(vm) {\n  let data = vm.$options.data; // data 可能是 函数 或 对象\n  data = typeof data === \"function\" ? data.call(vm) : data;\n\n  // 数据劫持 Object.defineProperty\n  observe(data);\n\n  vm._data = data; // 将返回的对象放到 _data 上\n\n  // 将 vm._data.XXX 代码为 vm.XXX\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n}\n","import { compileToFunction } from \"./compiler\";\nimport { initState } from \"./state\";\n\n// Vue 的 init() 方法\nexport function initMixin(Vue) {\n  // 初始化\n  Vue.prototype._init = function (options) {\n    // options 用户配置\n    // $data、$attr、$nextTick ......\n    const vm = this;\n    vm.$options = options; // 将用户选项挂载到实例上\n\n    // 初始化状态\n    initState(vm);\n\n    if (options.el) {\n      vm.$mount(options.el);\n    }\n  };\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const ops = vm.$options;\n    el = document.querySelector(el);\n    // 检查用户选项 有没有 render 函数\n    if (!ops.render) {\n      let template;\n      // 有没有 template 和 el\n      if (!ops.template && el) {\n        template = el.outerHTML;\n      } else {\n        if (el) {\n          template = ops.template; // 用户选项写了 template 用 template\n        }\n      }\n      console.log(template);\n\n      if (template) {\n        // 对模版进行编译\n        const render = compileToFunction(template);\n        ops.render = render;\n      }\n    }\n\n    ops.render; // 最终的render方法\n  };\n}\n","import { initMixin } from \"./init\";\n\n// 将所有的方法耦合在一起\nfunction Vue(options) {\n  // options 用户选项\n  this._init(options);\n}\n\ninitMixin(Vue); // 扩展了init方法\n\nexport default Vue;\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","console","log","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","observeArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","vm","ops","$options","initDate","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}